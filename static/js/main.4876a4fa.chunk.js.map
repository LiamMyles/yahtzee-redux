{"version":3,"sources":["yahtzee-components/Die.jsx","yahtzee-components/Dice.jsx","yahtzee-components/ScoreBoard.jsx","App.jsx","index.jsx"],"names":["Die","_ref","_ref$side","side","_ref$theme","theme","clickFunction","isHeld","react_default","a","createElement","Fragment","className","concat","data-current-side","onClick","rollDie","Math","floor","random","initialDiceState","dice","Object","toConsumableArray","Array","map","isRolling","currentRoll","currentDice","diceReducer","state","type","dieNumber","isFirstRound","newDice","die","index","objectSpread","Error","Dice","_ref2","dispatchGameState","isOutOfRolls","_useReducer","useReducer","_useReducer2","slicedToArray","diceState","dispatchDice","previousRoll","value","ref","useRef","useEffect","current","usePrevious","_ref3","dieState","key","Die_Die","disabled","initialScoreState","upper","ones","score","isScored","twos","threes","fours","fives","sixes","lower","threeKinds","fourKinds","smallStraight","longStraight","chance","yahtzee","count","allScoresScored","scoreReducer","alias","section","scoredState","defineProperty","allIsScored","addIsScores","scores","arrayToMutate","hasOwnProperty","push","every","ScoreBoard","canScore","diceRoll","scoreState","dispatchScores","previousYahtzeeCount","ScoreBoardCells","ScoreSelection","cantScore","blueprint","_ref4","test","isValidScore","_ref5","upperCantScore","scoreboardBlueprint","lowerCantScore","mustScoreZero","_ref6","name","getScore","topScore","ScoreButtonSelection","currentScore","_ref7","_ref8","disableButton","countToScore","_ref9","_ref10","ScoreCell","scoredScore","_ref11","yathzeeCount","_ref12","x","getUpperScoreFunction","scoringNumber","filter","reduce","prev","includes","sort","firstHalf","slice","endHalf","checkAllAreConsecutive","length","Set","size","initialGameState","totalScores","yahtzees","currentRound","currentDiceRoll","hasYathzeed","gameStateReducer","App","gameState","upperScore","lowerScore","upperBonusScore","yathzeeBonusScore","finalScore","from","v","classes","ReactDOM","render","src_App","document","getElementById"],"mappings":"sRAEe,SAASA,EAATC,GAA6D,IAAAC,EAAAD,EAA9CE,YAA8C,IAAAD,EAAvC,EAAuCA,EAAAE,EAAAH,EAApCI,aAAoC,IAAAD,EAA5B,EAA4BA,EAAzBE,EAAyBL,EAAzBK,cAAeC,EAAUN,EAAVM,OAChE,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,MACEE,UAAS,kBAAAC,OAAoBR,GAASE,EAAS,EAAI,IACnDO,oBAAmBX,EACnBY,QAAST,GAETE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,UCXtB,SAASI,IACP,OAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAGzC,IAAMC,EAAmB,CACvBC,KAAMC,OAAAC,EAAA,EAAAD,CAAIE,MAAM,IAAIC,IAAI,iBAAO,CAC7BpB,MAAO,EACPF,KAAM,EACNuB,WAAW,EACXnB,QAAQ,KAEVoB,YAAa,EACbC,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,IAG5B,SAASC,EAAYC,EAArB7B,GAA+D,IAAjC8B,EAAiC9B,EAAjC8B,KAAMC,EAA2B/B,EAA3B+B,UAAWC,EAAgBhC,EAAhBgC,aAC7C,OAAQF,GACN,IAAK,UACH,IAAMG,EAAUJ,EAAMT,KAAKI,IAAI,SAACU,EAAKC,GACnC,OAAIJ,IAAcI,GAAUD,EAAI5B,OAGvB4B,EAFAb,OAAAe,EAAA,EAAAf,CAAA,GAAKa,EAAZ,CAAiBhC,KAAMa,QAK3B,OAAOM,OAAAe,EAAA,EAAAf,CAAA,GAAKQ,EAAZ,CAAmBT,KAAMa,IAE3B,IAAK,WACH,IAAMA,EAAUJ,EAAMT,KAAKI,IAAI,SAAAU,GAC7B,OAAIA,EAAI5B,OACCe,OAAAe,EAAA,EAAAf,CAAA,GAAKa,GAELb,OAAAe,EAAA,EAAAf,CAAA,GAAKa,EAAZ,CAAiBhC,KAAMa,QAG3B,OAAOM,OAAAe,EAAA,EAAAf,CAAA,GAAKQ,EAAZ,CAAmBT,KAAMa,EAASP,YAAaG,EAAMH,YAAc,IAErE,IAAK,aACH,GAAIM,EAAc,OAAOH,EACzB,IAAMI,EAAUJ,EAAMT,KAAKI,IAAI,SAACU,EAAKC,GACnC,OAAIJ,IAAcI,EACTd,OAAAe,EAAA,EAAAf,CAAA,GAAKa,EAAZ,CAAiB5B,QAAS4B,EAAI5B,SAEvB4B,IAGX,OAAOb,OAAAe,EAAA,EAAAf,CAAA,GAAKQ,EAAZ,CAAmBT,KAAMa,IAE3B,IAAK,YACH,IAAMA,EAAUJ,EAAMT,KAAKI,IAAI,SAAAU,GAAG,OAAAb,OAAAe,EAAA,EAAAf,CAAA,GAAUa,EAAV,CAAe5B,QAAQ,MACzD,OAAOe,OAAAe,EAAA,EAAAf,CAAA,GAAKQ,EAAZ,CAAmBT,KAAMa,IAE3B,QACE,MAAM,IAAII,OAYD,SAASC,EAATC,GAIZ,IAHDC,EAGCD,EAHDC,kBACAC,EAECF,EAFDE,aACAT,EACCO,EADDP,aACCU,EACiCC,qBAAWf,EAAaT,GADzDyB,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAqB,EAAA,GACMI,EADNF,EAAA,GACiBG,EADjBH,EAAA,GAEKI,EAdR,SAAqBC,GACnB,IAAMC,EAAMC,mBAIZ,OAHAC,oBAAU,WACRF,EAAIG,QAAUJ,IAETC,EAAIG,QASUC,CAAYR,EAAUpB,aAe3C,OAbA0B,oBAAU,WACJN,EAAUpB,cAAgBsB,EAAe,GAC3CR,EAAkB,CAChBV,KAAM,oBACNH,YAAamB,EAAU1B,KAAKI,IAAI,SAAA+B,GAAA,OAAAA,EAAGrD,UAGtC,CAAC4C,EAAWN,EAAmBQ,IAElCI,oBAAU,WACRL,EAAa,CAAEjB,KAAM,eACpB,CAACE,IAGFzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WAASE,UAAU,QAChBmC,EAAU1B,KAAKI,IAAI,SAACgC,EAAUrB,GAAX,OAClB5B,EAAAC,EAAAC,cAAA,OAAKgD,IAAKtB,GACR5B,EAAAC,EAAAC,cAACiD,EAAD,CACExD,KAAM8B,EAAe,EAAIwB,EAAStD,KAClCE,MAAOoD,EAASpD,MAChBE,OAAQkD,EAASlD,OACjBD,cAAe,WACb0C,EAAa,CACXjB,KAAM,aACNC,UAAWI,EACXH,wBAOZzB,EAAAC,EAAAC,cAAA,UACEE,UAAU,mBACVgD,SAAUlB,EACV3B,QAAS,WACPiC,EAAa,CAAEjB,KAAM,eAGvBvB,EAAAC,EAAAC,cAAA,QAAME,UAAU,iCAPlB,aC5GN,IAAMiD,EAAoB,CACxBC,MAAO,CACLC,KAAM,CACJC,MAAO,EACPC,UAAU,GAEZC,KAAM,CACJF,MAAO,EACPC,UAAU,GAEZE,OAAQ,CACNH,MAAO,EACPC,UAAU,GAEZG,MAAO,CACLJ,MAAO,EACPC,UAAU,GAEZI,MAAO,CACLL,MAAO,EACPC,UAAU,GAEZK,MAAO,CACLN,MAAO,EACPC,UAAU,IAGdM,MAAO,CACLC,WAAY,CACVR,MAAO,EACPC,UAAU,GAEZQ,UAAW,CACTT,MAAO,EACPC,UAAU,GAEZS,cAAe,CACbV,MAAO,EACPC,UAAU,GAEZU,aAAc,CACZX,MAAO,EACPC,UAAU,GAEZW,OAAQ,CACNZ,MAAO,EACPC,UAAU,GAEZY,QAAS,CACPb,MAAO,EACPC,UAAU,EACVa,MAAO,IAGXC,iBAAiB,GAEnB,SAASC,EAAalD,EAAtB7B,GAA8D,IAA/B8B,EAA+B9B,EAA/B8B,KAAMkD,EAAyBhF,EAAzBgF,MAAOjB,EAAkB/D,EAAlB+D,MAAOkB,EAAWjF,EAAXiF,QACjD,OAAQnD,GACN,IAAK,WACH,IAAMoD,EAAW7D,OAAAe,EAAA,EAAAf,CAAA,GACZQ,EADYR,OAAA8D,EAAA,EAAA9D,CAAA,GAEd4D,EAFc5D,OAAAe,EAAA,EAAAf,CAAA,GAGVQ,EAAMoD,GAHI5D,OAAA8D,EAAA,EAAA9D,CAAA,GAIZ2D,EAJY3D,OAAAe,EAAA,EAAAf,CAAA,GAKRQ,EAAMoD,GAASD,GALP,CAMXjB,QACAC,UAAU,GACI,YAAVgB,GAAuB,CACzBH,MAAOhD,EAAMoD,GAASD,GAAOH,MAAQ,QAKvCO,EAAc,GACdC,EAAc,SAACC,EAAQC,GAC3B,IAAK,IAAMxB,KAASuB,EACdA,EAAOE,eAAezB,IACxBwB,EAAcE,KAAKH,EAAOvB,GAAOC,WAIvCqB,EAAYH,EAAYrB,MAAOuB,GAC/BC,EAAYH,EAAYZ,MAAOc,GAE/B,IAAMN,EAAkBM,EAAYM,MAAM,SAAA1B,GAAQ,OAAIA,IAEtD,OAAO3C,OAAAe,EAAA,EAAAf,CAAA,GAAK6D,EAAZ,CAAyBJ,oBAE3B,QACE,MAAM,IAAIzC,OAYD,SAASsD,EAATpD,GAKZ,IAJDnB,EAICmB,EAJDnB,KACAoB,EAGCD,EAHDC,kBACAoD,EAECrD,EAFDqD,SACAC,EACCtD,EADDsD,SACCnD,EACoCC,qBACnCoC,EACAnB,GAHDhB,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAqB,EAAA,GACMoD,EADNlD,EAAA,GACkBmD,EADlBnD,EAAA,GAMDQ,oBAAU,WACJ0C,EAAWhB,iBACbtC,EAAkB,CAAEV,KAAM,qBAE3B,CAACgE,EAAWhB,gBAAiBtC,IAEhC,IAAMwD,EAzBR,SAAqB/C,GACnB,IAAMC,EAAMC,mBAIZ,OAHAC,oBAAU,WACRF,EAAIG,QAAUJ,IAETC,EAAIG,QAoBkBC,CAAYwC,EAAWxB,MAAMM,QAAQC,OAMlE,OALAzB,oBAAU,WACJ4C,EAAuBF,EAAWxB,MAAMM,QAAQC,OAClDrC,EAAkB,CAAEV,KAAM,mBAE3B,CAACgE,EAAWxB,MAAMM,QAAQC,MAAOrC,EAAmBwD,IAErDzF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACwF,EAAD,CACE7E,KAAMA,EACN0E,WAAYA,EACZF,SAAUA,IAEZrF,EAAAC,EAAAC,cAACyF,EAAD,CACE9E,KAAMA,EACNyE,SAAUA,EACVE,eAAgBA,EAChBvD,kBAAmBA,EACnBoD,SAAUA,EACVE,WAAYA,KAMpB,SAASI,EAAT3C,GAOG,IANDnC,EAMCmC,EANDnC,KACAyE,EAKCtC,EALDsC,SACAE,EAICxC,EAJDwC,eACAvD,EAGCe,EAHDf,kBACAoD,EAECrC,EAFDqC,SACAE,EACCvC,EADDuC,WAEMK,EAAY,SAACC,EAAWnB,GAAZ,OAChBmB,EACG5E,IAAI,SAAA6E,GAAA,IAAGrB,EAAHqB,EAAGrB,MAAOsB,EAAVD,EAAUC,KAAV,MAAsB,CACzBtC,SAAU8B,EAAWb,GAASD,GAAOhB,SACrCuC,aAAcD,EAAKlF,MAEpBsE,MAAM,SAAAc,GAAA,IAAGxC,EAAHwC,EAAGxC,SAAUuC,EAAbC,EAAaD,aAAb,OAAgCvC,IAAauC,KAClDE,EAAiBN,EAAUO,EAAoB7C,MAAO,SACtD8C,EAAiBR,EAAUO,EAAoBpC,MAAO,SACtDsC,EAA6B,IAAbf,GAAkBY,GAAkBE,EAE1D,OACEpG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,WAASE,UAAU,mBACjBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4DACX+F,EAAoB7C,MAAMrC,IACzB,SAAAqF,GAAA,IAAGC,EAAHD,EAAGC,KAAMR,EAATO,EAASP,KAAgBS,GAAzBF,EAAeG,SAAfH,EAAyBE,UAAU/B,EAAnC6B,EAAmC7B,MAAnC,OACEzE,EAAAC,EAAAC,cAACwG,EAAD,CACEL,cAAeA,EACfhB,SAAUA,EACVX,QAAS,QACTiC,aAAcH,EAAS3F,GACvBmF,aAAcD,EAAKlF,GACnB0F,KAAMA,EACN9C,SAAU8B,EAAWjC,MAAMmB,GAAOhB,SAClC+B,eAAgBA,EAChBvD,kBAAmBA,EACnBwC,MAAOA,EACPvB,IAAKuB,OAKbzE,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4DACX+F,EAAoBpC,MAAM9C,IACzB,SAAA2F,GAAA,IAAGL,EAAHK,EAAGL,KAAMR,EAATa,EAASb,KAAgBS,GAAzBI,EAAeH,SAAfG,EAAyBJ,UAAU/B,EAAnCmC,EAAmCnC,MAAnC,OACEzE,EAAAC,EAAAC,cAACwG,EAAD,CACEL,cAAeA,EACfhB,SAAUA,EACVX,QAAS,QACTiC,aAAcH,EAAS3F,GACvBmF,aAAcD,EAAKlF,GACnBqC,IAAKuB,EACLhB,SAAU8B,EAAWxB,MAAMU,GAAOhB,SAClC+B,eAAgBA,EAChBvD,kBAAmBA,EACnBwC,MAAOA,EACP8B,KAAMA,SAStB,SAASG,EAATG,GAWG,IAVDN,EAUCM,EAVDN,KACAP,EASCa,EATDb,aACAW,EAQCE,EARDF,aACAlD,EAOCoD,EAPDpD,SACA+B,EAMCqB,EANDrB,eACAf,EAKCoC,EALDpC,MACAC,EAICmC,EAJDnC,QACAW,EAGCwB,EAHDxB,SACApD,EAEC4E,EAFD5E,kBACAoE,EACCQ,EADDR,cAEA,IACe,IAAbhB,GACCgB,GAAiB5C,IAChB4C,IAAkBL,IAClBK,GAAiB5C,GAAsB,YAAVgB,EAE/B,OAAO,EAET,IAAMqC,GAAiBT,IAAkBL,GAA0B,YAAVvB,EACnDsC,EAAeV,EAAgB,EAAIM,EACzC,OACE3G,EAAAC,EAAAC,cAAA,UACEE,UAAU,yBACVG,QAAS,WACPiF,EAAe,CACbjE,KAAM,WACNkD,QACAC,UACAlB,MAAOuD,IAET9E,EAAkB,CAAEV,KAAM,WAAYmD,UAASlB,MAAOuD,KAExD3D,SAAU0D,GAETT,EAAa,iBAAAhG,OACKkG,GAEjBvG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,QAAME,UAAU,gCAAgCmG,GAChDvG,EAAAC,EAAAC,cAAA,QAAME,UAAU,iCAAiCuG,KAM3D,SAASjB,EAATsB,GAAyDA,EAA9BnG,KAA8B,IAAxB0E,EAAwByB,EAAxBzB,WAAwByB,EAAZ3B,SAC3C,OACErF,EAAAC,EAAAC,cAAA,WAASE,UAAU,eACjBJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0DACX+F,EAAoB7C,MAAMrC,IAAI,SAAAgG,GAAA,IAAGV,EAAHU,EAAGV,KAAM9B,EAATwC,EAASxC,MAAT,OAC7BzE,EAAAC,EAAAC,cAACgH,EAAD,CACEhE,IAAKuB,EACLhB,SAAU8B,EAAWjC,MAAMmB,GAAOhB,SAClC0D,YAAa5B,EAAWjC,MAAMmB,GAAOjB,MACrCiB,MAAOA,EACP8B,KAAMA,OAIZvG,EAAAC,EAAAC,cAAA,MAAIE,UAAU,0DACX+F,EAAoBpC,MAAM9C,IAAI,SAAAmG,GAAA,IAAGb,EAAHa,EAAGb,KAAM9B,EAAT2C,EAAS3C,MAAT,OAC7BzE,EAAAC,EAAAC,cAACgH,EAAD,CACEhE,IAAKuB,EACLhB,SAAU8B,EAAWxB,MAAMU,GAAOhB,SAClC0D,YAAa5B,EAAWxB,MAAMU,GAAOjB,MACrCiB,MAAOA,EACP4C,aAAc9B,EAAWxB,MAAMU,GAAOH,MACtCiC,KAAMA,QAQlB,SAASW,EAATI,GAAyE,IAApDf,EAAoDe,EAApDf,KAAM9C,EAA8C6D,EAA9C7D,SAAU0D,EAAoCG,EAApCH,YAAa1C,EAAuB6C,EAAvB7C,MAAO4C,EAAgBC,EAAhBD,aACvD,OACErH,EAAAC,EAAAC,cAAA,MAAIE,UAAU,sBACZJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,2BAA2BmG,EAA3C,KACAvG,EAAAC,EAAAC,cAAA,QACEE,UAAS,6BAAAC,OACPoD,EAAW,yCAA2C,KAGvDA,GAAY0D,GAEJ,YAAV1C,GACC4C,EAAe,GACfvG,OAAAC,EAAA,EAAAD,CAAIE,MAAMqG,IAAepG,IAAI,SAACsG,EAAG3F,GAAJ,OAAc5B,EAAAC,EAAAC,cAAA,QAAMgD,IAAKtB,GAAX,QAKnD,SAAS4F,EAAsBC,GAC7B,OAAO,SAAA5G,GAAI,OACTA,EACG6G,OAAO,SAAA/F,GAAG,OAAIA,IAAQ8F,IACtBE,OAAO,SAACC,EAAM9E,GAAP,OAAmB8E,EAAO9E,GAAS,IAEjD,IAAMqD,EAAsB,CAC1B7C,MAAO,CACL,CACEyC,KAAM,SAAAlF,GAAI,OAAIA,EAAKgH,SAAS,IAC5BtB,KAAM,OACN9B,MAAO,OACPgC,SAAU,EACVD,SAAUgB,EAAsB,IAElC,CACEzB,KAAM,SAAAlF,GAAI,OAAIA,EAAKgH,SAAS,IAC5BtB,KAAM,OACN9B,MAAO,OACPgC,SAAU,GACVD,SAAUgB,EAAsB,IAElC,CACEzB,KAAM,SAAAlF,GAAI,OAAIA,EAAKgH,SAAS,IAC5BtB,KAAM,SACN9B,MAAO,SACPgC,SAAU,GACVD,SAAUgB,EAAsB,IAElC,CACEzB,KAAM,SAAAlF,GAAI,OAAIA,EAAKgH,SAAS,IAC5BtB,KAAM,QACN9B,MAAO,QACPgC,SAAU,GACVD,SAAUgB,EAAsB,IAElC,CACEzB,KAAM,SAAAlF,GAAI,OAAIA,EAAKgH,SAAS,IAC5BtB,KAAM,QACN9B,MAAO,QACPgC,SAAU,GACVD,SAAUgB,EAAsB,IAElC,CACEzB,KAAM,SAAAlF,GAAI,OAAIA,EAAKgH,SAAS,IAC5BtB,KAAM,QACN9B,MAAO,QACPgC,SAAU,GACVD,SAAUgB,EAAsB,KAGpCzD,MAAO,CACL,CACEgC,KAAM,SAAAlF,GACJ,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAER,IAAMC,EAAYrG,EAAQsG,MAAM,EAAG,GAC7BC,EAAUvG,EAAQsG,MAAM,GAE9B,OACED,EAAU5C,MAAM,SAAAxD,GAAG,OAAIA,IAAQoG,EAAU,MACzCE,EAAQ9C,MAAM,SAAAxD,GAAG,OAAIA,IAAQsG,EAAQ,MAGzC1B,KAAM,kBACN9B,MAAO,aACPgC,SAAU,GACVD,SAAU,SAAA3F,GACR,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAER,IAAMC,EAAYrG,EAAQsG,MAAM,EAAG,GAC7BC,EAAUvG,EAAQsG,MAAM,GAE9B,OAAID,EAAU5C,MAAM,SAAAxD,GAAG,OAAIA,IAAQoG,EAAU,KACrB,EAAfA,EAAU,GACfE,EAAQ9C,MAAM,SAAAxD,GAAG,OAAIA,IAAQsG,EAAQ,KAAyB,EAAbA,EAAQ,QAA7D,IAGJ,CACElC,KAAM,SAAAlF,GACJ,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAER,IAAMC,EAAYrG,EAAQsG,MAAM,EAAG,GAC7BC,EAAUvG,EAAQsG,MAAM,GAE9B,OACED,EAAU5C,MAAM,SAAAxD,GAAG,OAAIA,IAAQoG,EAAU,MACzCE,EAAQ9C,MAAM,SAAAxD,GAAG,OAAIA,IAAQsG,EAAQ,MAGzC1B,KAAM,iBACN9B,MAAO,YACPgC,SAAU,GACVD,SAAU,SAAA3F,GACR,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAER,IAAMC,EAAYrG,EAAQsG,MAAM,EAAG,GAC7BC,EAAUvG,EAAQsG,MAAM,GAE9B,OAAID,EAAU5C,MAAM,SAAAxD,GAAG,OAAIA,IAAQoG,EAAU,KACrB,EAAfA,EAAU,GACfE,EAAQ9C,MAAM,SAAAxD,GAAG,OAAIA,IAAQsG,EAAQ,KAAyB,EAAbA,EAAQ,QAA7D,IAGJ,CACElC,KAAM,SAAAlF,GACJ,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAER,IAAMC,EAAYrG,EAAQsG,MAAM,EAAG,GAC7BC,EAAUvG,EAAQsG,MAAM,GACxBE,EAAyB,SAACvG,EAAKC,EAAOf,GAC1C,OAAIe,IAAUf,EAAKsH,OAAS,GACrBxG,EAAM,IAAMd,EAAKe,EAAQ,IAElC,OACEmG,EAAU5C,MAAM+C,IAChBD,EAAQ9C,MAAM+C,IAGlB3B,KAAM,iBACN9B,MAAO,gBACPgC,SAAU,GACVD,SAAU,SAAA3F,GACR,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAER,IAAMC,EAAYrG,EAAQsG,MAAM,EAAG,GAC7BC,EAAUvG,EAAQsG,MAAM,GACxBE,EAAyB,SAACvG,EAAKC,EAAOf,GAC1C,OAAIe,IAAUf,EAAKsH,OAAS,GACrBxG,EAAM,IAAMd,EAAKe,EAAQ,IAElC,OACEmG,EAAU5C,MAAM+C,IAChBD,EAAQ9C,MAAM+C,GAEP,GAEA,IAIb,CACEnC,KAAM,SAAAlF,GACJ,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAMR,OAAOpG,EAAQyD,MAJgB,SAACxD,EAAKC,EAAOf,GAC1C,OAAIe,IAAUf,EAAKsH,OAAS,GACrBxG,EAAM,IAAMd,EAAKe,EAAQ,MAIpC2E,KAAM,gBACN9B,MAAO,eACPgC,SAAU,GACVD,SAAU,SAAA3F,GACR,IAAMa,EAAOZ,OAAAC,EAAA,EAAAD,CAAOD,GACpBa,EAAQoG,OAMR,OAAIpG,EAAQyD,MAJmB,SAACxD,EAAKC,EAAOf,GAC1C,OAAIe,IAAUf,EAAKsH,OAAS,GACrBxG,EAAM,IAAMd,EAAKe,EAAQ,KAGzB,GAEA,IAIb,CACEmE,KAAM,kBAAM,GACZQ,KAAM,SACN9B,MAAO,SACPgC,SAAU,GACVD,SAAU,SAAA3F,GAAI,OAAIA,EAAK8G,OAAO,SAACC,EAAM9E,GAAP,OAAmB8E,EAAO9E,GAAS,KAEnE,CACEiD,KAAM,SAAAlF,GAAI,OAA2B,IAAvB,IAAIuH,IAAIvH,GAAMwH,MAC5B9B,KAAM,UACN9B,MAAO,UACPgC,SAAU,GACVD,SAAU,kBAAM,OCrehB8B,EAAmB,CACvBC,YAAa,CAAExE,MAAO,EAAGT,MAAO,EAAGkF,SAAU,GAC7CC,aAAc,EACdC,gBAAiB,EACjBtH,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,GAC1BuH,aAAa,EACbpE,iBAAiB,GAGnB,SAASqE,EAAiBtH,EAA1B7B,GAAwE,IAArC8B,EAAqC9B,EAArC8B,KAAMiC,EAA+B/D,EAA/B+D,MAAOkB,EAAwBjF,EAAxBiF,QAAStD,EAAe3B,EAAf2B,YACvD,OAAQG,GACN,IAAK,WACH,OAAOT,OAAAe,EAAA,EAAAf,CAAA,GACFQ,EADL,CAEEiH,YAAYzH,OAAAe,EAAA,EAAAf,CAAA,GACPQ,EAAMiH,YADAzH,OAAA8D,EAAA,EAAA9D,CAAA,GAER4D,EAAUpD,EAAMiH,YAAY7D,GAAWlB,IAE1CiF,aAAcnH,EAAMmH,aAAe,EACnCC,gBAAiB,IAGrB,IAAK,gBACH,OAAIpH,EAAMqH,YACD7H,OAAAe,EAAA,EAAAf,CAAA,GACFQ,EADL,CAEEiH,YAAYzH,OAAAe,EAAA,EAAAf,CAAA,GACPQ,EAAMiH,YADA,CAETC,SAAUlH,EAAMiH,YAAYC,SAAW,MAIpC1H,OAAAe,EAAA,EAAAf,CAAA,GACFQ,EADL,CAEEqH,aAAa,EACbJ,YAAYzH,OAAAe,EAAA,EAAAf,CAAA,GACPQ,EAAMiH,YADA,CAETC,SAAUlH,EAAMiH,YAAYC,SAAW,MAK/C,IAAK,oBACH,OAAO1H,OAAAe,EAAA,EAAAf,CAAA,GACFQ,EADL,CAEEF,cACAsH,gBAAiBpH,EAAMoH,gBAAkB,IAG7C,IAAK,kBACH,OAAO5H,OAAAe,EAAA,EAAAf,CAAA,GACFQ,EADL,CAEEiD,iBAAiB,IAIrB,QACE,MAAM,IAAIzC,OA4ED+G,MAxEf,WAAe,IAAA1G,EAC0BC,qBACrCwG,EACAN,GAHWjG,EAAAvB,OAAAwB,EAAA,EAAAxB,CAAAqB,EAAA,GACN2G,EADMzG,EAAA,GACKJ,EADLI,EAAA,GAMP0G,EAAaD,EAAUP,YAAYjF,MACnC0F,EAAaF,EAAUP,YAAYxE,MACnCkF,EAAkBF,GAAc,GAAK,GAAK,EAC1CG,EACJJ,EAAUP,YAAYC,SAAW,EACI,IAAjCM,EAAUP,YAAYC,SACtB,EACAW,EACJJ,EAAaC,EAAaC,EAAkBC,EAC9C,OACElJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACG2I,EAAUvE,gBACTvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,0BAAkBiJ,GAClBnJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACQ,IAApB6I,GACCjJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,uBAAhB,eACcJ,EAAAC,EAAAC,cAAA,YAAO+I,IAGA,IAAtBC,GACClJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,yBAAhB,iBAEEJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,uBAAuB8I,MAM/ClJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oBAAd,kBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAd,SACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,qBAAd,UAEFJ,EAAAC,EAAAC,cAACkF,EAAD,CACEvE,KAAMiI,EAAU1H,YAChBkE,SAAUwD,EAAUJ,gBACpBzG,kBAAmBA,EACnBoD,SAAUyD,EAAUJ,gBAAkB,IAExC1I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,kBACCc,MAAMoI,KAAK,CAAEjB,OAAQ,GAAK,SAACkB,EAAGzH,GAC7B,IAAM0H,EAAO,yBAAAjJ,OACXuB,EAAQkH,EAAUJ,gBACd,mCACA,IAEN,OAAO1I,EAAAC,EAAAC,cAAA,OAAKE,UAAWkJ,OAG3BtJ,EAAAC,EAAAC,cAAC6B,EAAD,CACEE,kBAAmBA,EACnBC,aAA4C,IAA9B4G,EAAUJ,gBACxBjH,aAA4C,IAA9BqH,EAAUJ,sBC9HtCa,IAASC,OAAOxJ,EAAAC,EAAAC,cAACuJ,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4876a4fa.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Die({ side = 1, theme = 1, clickFunction, isHeld }) {\n  return (\n    <>\n      <ul\n        className={`die die--theme-${theme + (isHeld ? 1 : 0)}`}\n        data-current-side={side}\n        onClick={clickFunction}\n      >\n        <li className=\"pip\" />\n        <li className=\"pip\" />\n        <li className=\"pip\" />\n        <li className=\"pip\" />\n        <li className=\"pip\" />\n        <li className=\"pip\" />\n      </ul>\n    </>\n  );\n}\n","import React, { useReducer, useEffect, useRef } from \"react\";\n\nimport Die from \"./Die\";\n\nfunction rollDie() {\n  return Math.floor(Math.random() * 6) + 1;\n}\n\nconst initialDiceState = {\n  dice: [...Array(5)].map(() => ({\n    theme: 3,\n    side: 1,\n    isRolling: false,\n    isHeld: false\n  })),\n  currentRoll: 0,\n  currentDice: [1, 1, 1, 1, 1]\n};\n\nfunction diceReducer(state, { type, dieNumber, isFirstRound }) {\n  switch (type) {\n    case \"rollDie\": {\n      const newDice = state.dice.map((die, index) => {\n        if (dieNumber === index && !die.isHeld) {\n          return { ...die, side: rollDie() };\n        } else {\n          return die;\n        }\n      });\n      return { ...state, dice: newDice };\n    }\n    case \"rollDice\": {\n      const newDice = state.dice.map(die => {\n        if (die.isHeld) {\n          return { ...die };\n        } else {\n          return { ...die, side: rollDie() };\n        }\n      });\n      return { ...state, dice: newDice, currentRoll: state.currentRoll + 1 };\n    }\n    case \"toggleHold\": {\n      if (isFirstRound) return state;\n      const newDice = state.dice.map((die, index) => {\n        if (dieNumber === index) {\n          return { ...die, isHeld: !die.isHeld };\n        } else {\n          return die;\n        }\n      });\n      return { ...state, dice: newDice };\n    }\n    case \"resetHeld\": {\n      const newDice = state.dice.map(die => ({ ...die, isHeld: false }));\n      return { ...state, dice: newDice };\n    }\n    default:\n      throw new Error();\n  }\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function Dice({\n  dispatchGameState,\n  isOutOfRolls,\n  isFirstRound\n}) {\n  const [diceState, dispatchDice] = useReducer(diceReducer, initialDiceState);\n  const previousRoll = usePrevious(diceState.currentRoll);\n\n  useEffect(() => {\n    if (diceState.currentRoll === previousRoll + 1) {\n      dispatchGameState({\n        type: \"updateCurrentRoll\",\n        currentDice: diceState.dice.map(({ side }) => side)\n      });\n    }\n  }, [diceState, dispatchGameState, previousRoll]);\n\n  useEffect(() => {\n    dispatchDice({ type: \"resetHeld\" });\n  }, [isFirstRound]);\n\n  return (\n    <>\n      <section className=\"dice\">\n        {diceState.dice.map((dieState, index) => (\n          <div key={index}>\n            <Die\n              side={isFirstRound ? 1 : dieState.side}\n              theme={dieState.theme}\n              isHeld={dieState.isHeld}\n              clickFunction={() => {\n                dispatchDice({\n                  type: \"toggleHold\",\n                  dieNumber: index,\n                  isFirstRound\n                });\n              }}\n            />\n          </div>\n        ))}\n      </section>\n      <button\n        className=\"roll-dice-button\"\n        disabled={isOutOfRolls}\n        onClick={() => {\n          dispatchDice({ type: \"rollDice\" });\n        }}\n      >\n        <span className=\"roll-dice-button__background\" />\n        Roll All\n      </button>\n    </>\n  );\n}\n","import React, { useReducer, useEffect, useRef } from \"react\";\n\nconst initialScoreState = {\n  upper: {\n    ones: {\n      score: 0,\n      isScored: false\n    },\n    twos: {\n      score: 0,\n      isScored: false\n    },\n    threes: {\n      score: 0,\n      isScored: false\n    },\n    fours: {\n      score: 0,\n      isScored: false\n    },\n    fives: {\n      score: 0,\n      isScored: false\n    },\n    sixes: {\n      score: 0,\n      isScored: false\n    }\n  },\n  lower: {\n    threeKinds: {\n      score: 0,\n      isScored: false\n    },\n    fourKinds: {\n      score: 0,\n      isScored: false\n    },\n    smallStraight: {\n      score: 0,\n      isScored: false\n    },\n    longStraight: {\n      score: 0,\n      isScored: false\n    },\n    chance: {\n      score: 0,\n      isScored: false\n    },\n    yahtzee: {\n      score: 0,\n      isScored: false,\n      count: 0\n    }\n  },\n  allScoresScored: false\n};\nfunction scoreReducer(state, { type, alias, score, section }) {\n  switch (type) {\n    case \"addScore\": {\n      const scoredState = {\n        ...state,\n        [section]: {\n          ...state[section],\n          [alias]: {\n            ...state[section][alias],\n            score,\n            isScored: true,\n            ...(alias === \"yahtzee\" && {\n              count: state[section][alias].count + 1\n            })\n          }\n        }\n      };\n      const allIsScored = [];\n      const addIsScores = (scores, arrayToMutate) => {\n        for (const score in scores) {\n          if (scores.hasOwnProperty(score)) {\n            arrayToMutate.push(scores[score].isScored);\n          }\n        }\n      };\n      addIsScores(scoredState.upper, allIsScored);\n      addIsScores(scoredState.lower, allIsScored);\n\n      const allScoresScored = allIsScored.every(isScored => isScored);\n\n      return { ...scoredState, allScoresScored };\n    }\n    default:\n      throw new Error();\n  }\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function ScoreBoard({\n  dice,\n  dispatchGameState,\n  canScore,\n  diceRoll\n}) {\n  const [scoreState, dispatchScores] = useReducer(\n    scoreReducer,\n    initialScoreState\n  );\n\n  useEffect(() => {\n    if (scoreState.allScoresScored) {\n      dispatchGameState({ type: \"allScoresScored\" });\n    }\n  }, [scoreState.allScoresScored, dispatchGameState]);\n\n  const previousYahtzeeCount = usePrevious(scoreState.lower.yahtzee.count);\n  useEffect(() => {\n    if (previousYahtzeeCount < scoreState.lower.yahtzee.count) {\n      dispatchGameState({ type: \"scoredYahtzee\" });\n    }\n  }, [scoreState.lower.yahtzee.count, dispatchGameState, previousYahtzeeCount]);\n  return (\n    <>\n      <ScoreBoardCells\n        dice={dice}\n        scoreState={scoreState}\n        canScore={canScore}\n      />\n      <ScoreSelection\n        dice={dice}\n        diceRoll={diceRoll}\n        dispatchScores={dispatchScores}\n        dispatchGameState={dispatchGameState}\n        canScore={canScore}\n        scoreState={scoreState}\n      />\n    </>\n  );\n}\n\nfunction ScoreSelection({\n  dice,\n  diceRoll,\n  dispatchScores,\n  dispatchGameState,\n  canScore,\n  scoreState\n}) {\n  const cantScore = (blueprint, section) =>\n    blueprint\n      .map(({ alias, test }) => ({\n        isScored: scoreState[section][alias].isScored,\n        isValidScore: test(dice)\n      }))\n      .every(({ isScored, isValidScore }) => isScored || !isValidScore);\n  const upperCantScore = cantScore(scoreboardBlueprint.upper, \"upper\");\n  const lowerCantScore = cantScore(scoreboardBlueprint.lower, \"lower\");\n  const mustScoreZero = diceRoll === 3 && upperCantScore && lowerCantScore;\n\n  return (\n    <>\n      <section className=\"score-selection\">\n        <ul className=\"score-selection__buttons score-selection__buttons--upper\">\n          {scoreboardBlueprint.upper.map(\n            ({ name, test, topScore, getScore, alias }) => (\n              <ScoreButtonSelection\n                mustScoreZero={mustScoreZero}\n                canScore={canScore}\n                section={\"upper\"}\n                currentScore={getScore(dice)}\n                isValidScore={test(dice)}\n                name={name}\n                isScored={scoreState.upper[alias].isScored}\n                dispatchScores={dispatchScores}\n                dispatchGameState={dispatchGameState}\n                alias={alias}\n                key={alias}\n              />\n            )\n          )}\n        </ul>\n        <ul className=\"score-selection__buttons score-selection__buttons--lower\">\n          {scoreboardBlueprint.lower.map(\n            ({ name, test, topScore, getScore, alias }) => (\n              <ScoreButtonSelection\n                mustScoreZero={mustScoreZero}\n                canScore={canScore}\n                section={\"lower\"}\n                currentScore={getScore(dice)}\n                isValidScore={test(dice)}\n                key={alias}\n                isScored={scoreState.lower[alias].isScored}\n                dispatchScores={dispatchScores}\n                dispatchGameState={dispatchGameState}\n                alias={alias}\n                name={name}\n              />\n            )\n          )}\n        </ul>\n      </section>\n    </>\n  );\n}\nfunction ScoreButtonSelection({\n  name,\n  isValidScore,\n  currentScore,\n  isScored,\n  dispatchScores,\n  alias,\n  section,\n  canScore,\n  dispatchGameState,\n  mustScoreZero\n}) {\n  if (\n    canScore === false ||\n    (mustScoreZero && isScored) ||\n    (!mustScoreZero && !isValidScore) ||\n    (!mustScoreZero && isScored && alias !== \"yahtzee\")\n  ) {\n    return false;\n  }\n  const disableButton = !mustScoreZero && !isValidScore && alias !== \"yahtzee\";\n  const countToScore = mustScoreZero ? 0 : currentScore;\n  return (\n    <button\n      className=\"score-selection-button\"\n      onClick={() => {\n        dispatchScores({\n          type: \"addScore\",\n          alias,\n          section,\n          score: countToScore\n        });\n        dispatchGameState({ type: \"addScore\", section, score: countToScore });\n      }}\n      disabled={disableButton}\n    >\n      {mustScoreZero ? (\n        `Score Zero on ${name}`\n      ) : (\n        <>\n          <span className=\"score-selection-button__name\">{name}</span>\n          <span className=\"score-selection-button__score\">{currentScore}</span>\n        </>\n      )}\n    </button>\n  );\n}\nfunction ScoreBoardCells({ dice, scoreState, canScore }) {\n  return (\n    <section className=\"score-board\">\n      <ul className=\"score-board__scores score-board__scores--upper-section\">\n        {scoreboardBlueprint.upper.map(({ name, alias }) => (\n          <ScoreCell\n            key={alias}\n            isScored={scoreState.upper[alias].isScored}\n            scoredScore={scoreState.upper[alias].score}\n            alias={alias}\n            name={name}\n          />\n        ))}\n      </ul>\n      <ul className=\"score-board__scores score-board__scores--lower-section\">\n        {scoreboardBlueprint.lower.map(({ name, alias }) => (\n          <ScoreCell\n            key={alias}\n            isScored={scoreState.lower[alias].isScored}\n            scoredScore={scoreState.lower[alias].score}\n            alias={alias}\n            yathzeeCount={scoreState.lower[alias].count}\n            name={name}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nfunction ScoreCell({ name, isScored, scoredScore, alias, yathzeeCount }) {\n  return (\n    <li className=\"score-board__score\">\n      <span className=\"score-board__score-name\">{name} </span>\n      <span\n        className={`score-board__score-scored ${\n          isScored ? \"score-board__score-scored--score-added\" : \"\"\n        }`}\n      >\n        {isScored && scoredScore}\n      </span>\n      {alias === \"yahtzee\" &&\n        yathzeeCount > 1 &&\n        [...Array(yathzeeCount)].map((x, index) => <span key={index}>*</span>)}\n    </li>\n  );\n}\n\nfunction getUpperScoreFunction(scoringNumber) {\n  return dice =>\n    dice\n      .filter(die => die === scoringNumber)\n      .reduce((prev, current) => prev + current, 0);\n}\nconst scoreboardBlueprint = {\n  upper: [\n    {\n      test: dice => dice.includes(1),\n      name: \"Ones\",\n      alias: \"ones\",\n      topScore: 5,\n      getScore: getUpperScoreFunction(1)\n    },\n    {\n      test: dice => dice.includes(2),\n      name: \"Twos\",\n      alias: \"twos\",\n      topScore: 10,\n      getScore: getUpperScoreFunction(2)\n    },\n    {\n      test: dice => dice.includes(3),\n      name: \"Threes\",\n      alias: \"threes\",\n      topScore: 15,\n      getScore: getUpperScoreFunction(3)\n    },\n    {\n      test: dice => dice.includes(4),\n      name: \"Fours\",\n      alias: \"fours\",\n      topScore: 20,\n      getScore: getUpperScoreFunction(4)\n    },\n    {\n      test: dice => dice.includes(5),\n      name: \"Fives\",\n      alias: \"fives\",\n      topScore: 25,\n      getScore: getUpperScoreFunction(5)\n    },\n    {\n      test: dice => dice.includes(6),\n      name: \"Sixes\",\n      alias: \"sixes\",\n      topScore: 30,\n      getScore: getUpperScoreFunction(6)\n    }\n  ],\n  lower: [\n    {\n      test: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const firstHalf = newDice.slice(0, 3);\n        const endHalf = newDice.slice(2);\n\n        return (\n          firstHalf.every(die => die === firstHalf[0]) ||\n          endHalf.every(die => die === endHalf[0])\n        );\n      },\n      name: \"Three of a Kind\",\n      alias: \"threeKinds\",\n      topScore: 18,\n      getScore: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const firstHalf = newDice.slice(0, 3);\n        const endHalf = newDice.slice(2);\n\n        if (firstHalf.every(die => die === firstHalf[0]))\n          return firstHalf[0] * 3;\n        if (endHalf.every(die => die === endHalf[0])) return endHalf[0] * 3;\n      }\n    },\n    {\n      test: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const firstHalf = newDice.slice(0, 4);\n        const endHalf = newDice.slice(1);\n\n        return (\n          firstHalf.every(die => die === firstHalf[0]) ||\n          endHalf.every(die => die === endHalf[0])\n        );\n      },\n      name: \"Four of a Kind\",\n      alias: \"fourKinds\",\n      topScore: 24,\n      getScore: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const firstHalf = newDice.slice(0, 4);\n        const endHalf = newDice.slice(1);\n\n        if (firstHalf.every(die => die === firstHalf[0]))\n          return firstHalf[0] * 4;\n        if (endHalf.every(die => die === endHalf[0])) return endHalf[0] * 4;\n      }\n    },\n    {\n      test: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const firstHalf = newDice.slice(0, 4);\n        const endHalf = newDice.slice(2);\n        const checkAllAreConsecutive = (die, index, dice) => {\n          if (index === dice.length - 1) return true;\n          return die + 1 === dice[index + 1];\n        };\n        return (\n          firstHalf.every(checkAllAreConsecutive) ||\n          endHalf.every(checkAllAreConsecutive)\n        );\n      },\n      name: \"Small Straight\",\n      alias: \"smallStraight\",\n      topScore: 30,\n      getScore: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const firstHalf = newDice.slice(0, 4);\n        const endHalf = newDice.slice(2);\n        const checkAllAreConsecutive = (die, index, dice) => {\n          if (index === dice.length - 1) return true;\n          return die + 1 === dice[index + 1];\n        };\n        if (\n          firstHalf.every(checkAllAreConsecutive) ||\n          endHalf.every(checkAllAreConsecutive)\n        ) {\n          return 30;\n        } else {\n          return 0;\n        }\n      }\n    },\n    {\n      test: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const checkAllAreConsecutive = (die, index, dice) => {\n          if (index === dice.length - 1) return true;\n          return die + 1 === dice[index + 1];\n        };\n        return newDice.every(checkAllAreConsecutive);\n      },\n      name: \"Long Straight\",\n      alias: \"longStraight\",\n      topScore: 40,\n      getScore: dice => {\n        const newDice = [...dice];\n        newDice.sort();\n\n        const checkAllAreConsecutive = (die, index, dice) => {\n          if (index === dice.length - 1) return true;\n          return die + 1 === dice[index + 1];\n        };\n        if (newDice.every(checkAllAreConsecutive)) {\n          return 40;\n        } else {\n          return 0;\n        }\n      }\n    },\n    {\n      test: () => true,\n      name: \"Chance\",\n      alias: \"chance\",\n      topScore: 30,\n      getScore: dice => dice.reduce((prev, current) => prev + current, 0)\n    },\n    {\n      test: dice => new Set(dice).size === 1,\n      name: \"Yahtzee\",\n      alias: \"yahtzee\",\n      topScore: 50,\n      getScore: () => 50\n    }\n  ]\n};\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\nimport \"./Die.css\";\n\nimport Dice from \"./yahtzee-components/Dice\";\nimport ScoreBoard from \"./yahtzee-components/ScoreBoard\";\n\nconst initialGameState = {\n  totalScores: { lower: 0, upper: 0, yahtzees: 0 },\n  currentRound: 0,\n  currentDiceRoll: 0,\n  currentDice: [1, 1, 1, 1, 1],\n  hasYathzeed: false,\n  allScoresScored: false\n};\n\nfunction gameStateReducer(state, { type, score, section, currentDice }) {\n  switch (type) {\n    case \"addScore\": {\n      return {\n        ...state,\n        totalScores: {\n          ...state.totalScores,\n          [section]: state.totalScores[section] + score\n        },\n        currentRound: state.currentRound + 1,\n        currentDiceRoll: 0\n      };\n    }\n    case \"scoredYahtzee\": {\n      if (state.hasYathzeed) {\n        return {\n          ...state,\n          totalScores: {\n            ...state.totalScores,\n            yahtzees: state.totalScores.yahtzees + 1\n          }\n        };\n      } else {\n        return {\n          ...state,\n          hasYathzeed: true,\n          totalScores: {\n            ...state.totalScores,\n            yahtzees: state.totalScores.yahtzees + 1\n          }\n        };\n      }\n    }\n    case \"updateCurrentRoll\": {\n      return {\n        ...state,\n        currentDice,\n        currentDiceRoll: state.currentDiceRoll + 1\n      };\n    }\n    case \"allScoresScored\": {\n      return {\n        ...state,\n        allScoresScored: true\n      };\n    }\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n  const [gameState, dispatchGameState] = useReducer(\n    gameStateReducer,\n    initialGameState\n  );\n\n  const upperScore = gameState.totalScores.upper;\n  const lowerScore = gameState.totalScores.lower;\n  const upperBonusScore = upperScore >= 63 ? 35 : 0;\n  const yathzeeBonusScore =\n    gameState.totalScores.yahtzees > 1\n      ? gameState.totalScores.yahtzees * 100\n      : 0;\n  const finalScore =\n    upperScore + lowerScore + upperBonusScore + yathzeeBonusScore;\n  return (\n    <>\n      {gameState.allScoresScored ? (\n        <>\n          <h1>THE GAME IS OVER! </h1>\n          <h2>Final Score: {finalScore}</h2>\n          <div className=\"bonus-scores\">\n            {upperBonusScore !== 0 && (\n              <span className=\"bonus-scores__upper\">\n                Upper Bonus:<span>{upperBonusScore}</span>\n              </span>\n            )}\n            {yathzeeBonusScore !== 0 && (\n              <span className=\"bonus-scores__yathzee\">\n                Yahtzee Bonus:\n                <span className=\"bonus-scores__score\">{yathzeeBonusScore}</span>\n              </span>\n            )}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"title-card\">\n            <h1 className=\"title-card__main\">Yahtzee Redux!</h1>\n            <h2 className=\"title-card__upper\">Upper</h2>\n            <h2 className=\"title-card__lower\">Lower</h2>\n          </div>\n          <ScoreBoard\n            dice={gameState.currentDice}\n            diceRoll={gameState.currentDiceRoll}\n            dispatchGameState={dispatchGameState}\n            canScore={gameState.currentDiceRoll > 0}\n          />\n          <div className=\"dice-wrapper\">\n            <div className=\"round-tracker\">\n              <h2>Roll</h2>\n              {Array.from({ length: 3 }, (v, index) => {\n                const classes = `round-tracker__counter${\n                  index < gameState.currentDiceRoll\n                    ? \" round-tracker__counter--counted\"\n                    : \"\"\n                }`;\n                return <div className={classes} />;\n              })}\n            </div>\n            <Dice\n              dispatchGameState={dispatchGameState}\n              isOutOfRolls={gameState.currentDiceRoll === 3}\n              isFirstRound={gameState.currentDiceRoll === 0}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}